/**
    THIS IS GENERATED CODE AND SHOULD NOT BE CHANGED MANUALLY!!!

    Generated by: silvera
    Date: {{timestamp}}
*/

package com.silvera.{{package_name}}.service;

import org.springframework.stereotype.Service;
import com.silvera.{{package_name}}.domain.model.*;
import org.springframework.beans.factory.annotation.Autowired;
{% if use_circuit_breaker %}
import com.netflix.hystrix.contrib.javanica.annotation.HystrixCommand;
{% endif %}

{% if async %}
import java.util.concurrent.CompletableFuture;
import org.springframework.scheduling.annotation.Async;
import com.silvera.{{service_name}}.AsyncConfig;
{% endif %}

@Service
public abstract class Base{{service_name}}Service {

    {% for dependency in dep_names %}
    @Autowired
    {{dependency}}Client {{dependency|firstlower}}Client;
    {% endfor %}

    {% for function in functions %}
     {{'@Async(AsyncConfig.CONFIG_NAME)' if function.is_async() else ""}}
    {{generate_cb_annotation(function)}}
    public {{function|return_type}} {{function.name}}({{function|unfold_function_params}}) {{'throws InterruptedException ' if function.is_async() else ''}}{
        throw new java.lang.UnsupportedOperationException("Not implemented yet.");
    }
    {% if function.cb_pattern and function.cb_pattern != "fail_fast" %}
    //
    // This is a fallback method if method '{{function.name}}' fails!
    //
    public {{function|return_type}} {{function.cb_fallback}}({{function|unfold_function_params}}) {
        return {{get_default_for_cb_pattern(function)}};
    }
    {% endif %}
    {% endfor %}

}
