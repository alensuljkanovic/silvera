/**
    THIS IS GENERATED CODE AND SHOULD NOT BE CHANGED MANUALLY!!!

    Generated by: silvera
    Date: {{timestamp}}
*/

package com.silvera.{{package_name}}.service.dependencies;

import org.springframework.stereotype.Service;
import com.silvera.{{package_name}}.domain.model.*;
import com.silvera.{{package_name}}.domain.dependencies.*;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.client.RestTemplate;
import org.springframework.cloud.client.ServiceInstance;
import org.springframework.cloud.client.discovery.DiscoveryClient;
import java.net.URI;
import java.util.Arrays;
import java.util.List;


@Service
public class {{service_name}}Client {

    @Autowired
    private DiscoveryClient discoveryClient;

    private String getServiceURL(String serviceName){
        List<ServiceInstance> list = discoveryClient.getInstances(serviceName);
        if (list != null && list.size() > 0 ) {
            return list.get(0).getUri().toString();
        }
        return null;
    }

    {% for function in functions %}
    {{generate_cb_annotation(function)}}
    public {{function.ret_type|converttype}} {{function.name}}({{function|unfold_function_params}}) {
        {% set params = function|param_names %}
        {% set params_str = ", " + params if params else "" %}
        String targetUri = getServiceURL("{{service_name}}");
        RestTemplate restTemplate = new RestTemplate();
        {% if function.dep.http_verb == "GET" %}
        {% if function.is_ret_type_a_list %}
        {{function.ret_type|convertlisttoarray}} result = restTemplate.getForObject(targetUri + "{{get_rest_call(function)}}", {{function.ret_type|convertlisttoarray}}.class{{param_str}});
        return Arrays.asList(result);
        {% else%}
        {{"return" if function.ret_type != "void" else ""}} restTemplate.getForObject(targetUri + "{{get_rest_call(function)}}", {{function.ret_type|converttype}}.class{{param_str}});
        {% endif %}
        {% elif function.dep.http_verb == "POST"%}
        URI uri = URI.create(targetUri + "{{get_rest_call(function)}}");
        {{"return" if function.ret_type != "void" else ""}} restTemplate.postForObject(uri, {{function|param_names}}, {{function.ret_type|converttype}}.class);

        {% endif%}
    }
    {% endfor %}

}
